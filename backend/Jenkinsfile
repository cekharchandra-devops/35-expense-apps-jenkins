pipeline{
     agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
     environment {
        appVersion = '' // this will become global, we can use across pipeline
        region = 'us-east-1'
        account_id = '528757792370'
        project = 'expense'
        environment = 'dev'
        component = 'backend'
    }

    stages{
        stage('read the version'){
            steps{
                dir('backend') {
                    script{
                        def packageJson = readJSON file: 'package.json'
                        appVersion = packageJson.version
                        echo "App Version: ${appVersion}"
                    }
                }
            }
        }
         stage('install dependencies'){
            steps{
                dir('backend') {
                    sh 'npm install'
                }
            }
        }
        stage('docker image'){
           steps{
                dir('backend') {
                    sh """
                        aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.${region}.amazonaws.com
                        docker build -t ${account_id}.dkr.ecr.${region}.amazonaws.com/${project}/${environment}/${component}:${appVersion} .
                        docker images
                        docker push ${account_id}.dkr.ecr.${region}.amazonaws.com/${project}/${environment}/${component}:${appVersion}
                    """
                }
           }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}